//
//  BrandInteractor.swift
//  iOSTestFirebase
//
//  Created by Makrem chambah on 11/12/2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BrandBusinessLogic
{
    func doSomething(request: Brand.Something.Request)
    func loadBrands()
}

protocol BrandDataStore
{
    //var name: String { get set }
}

class BrandInteractor: BrandBusinessLogic, BrandDataStore
{
    var presenter: BrandPresentationLogic?
    var worker: BrandWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Brand.Something.Request)
    {
        worker = BrandWorker()
        worker?.doSomeWork()
        
        let response = Brand.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    
    
    func loadBrands(){
        worker = BrandWorker()
        worker?.loadBrands().then(){
            response in
            print(response)
            self.presenter!.successGettingBrands(response:response)
        }.catch{ error in
            print(error)
//            let error : [NSDictionary] = []
//            self.presenter!.gettingArticlesFailure(response: error)
        }
    }
}
