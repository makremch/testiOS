//
//  RegisterViewController.swift
//  iOSTestFirebase
//
//  Created by Makrem chambah on 15/12/2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Foundation
import FirebaseAuth
import FirebaseDatabase

protocol RegisterDisplayLogic: class
{
  func displaySomething(viewModel: Register.Something.ViewModel)
}

class RegisterViewController: UIViewController, RegisterDisplayLogic
{
    
    
    //MARK:- Outlets          :
    
    @IBOutlet weak var emailText       : UITextField!
    @IBOutlet weak var passwordText    : UITextField!
    @IBOutlet weak var retypePass      : UITextField!
    @IBOutlet weak var registerBtn     : UIButton!
    @IBOutlet weak var connecterBtn    : UIButton!
    @IBOutlet weak var fieldsView      : UIView!
    @IBOutlet weak var registerView    : UIView!
    @IBOutlet weak var imageLogo       : UIImageView!
    
    //MARK:- Var declarations :
  var interactor  : RegisterBusinessLogic?
  var router      : (NSObjectProtocol & RegisterRoutingLogic & RegisterDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController         = self
    let interactor             = RegisterInteractor()
    let presenter              = RegisterPresenter()
    let router                 = RegisterRouter()
    viewController.interactor  = interactor
    viewController.router      = router
    interactor.presenter       = presenter
    presenter.viewController   = viewController
    router.viewController      = viewController
    router.dataStore           = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
    designUI()
    ref = Database.database().reference()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = Register.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: Register.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
 
    
    
    
    func designUI(){
        self.registerBtn.layer.cornerRadius        = 5
//        self.seConnecterBtn.layer.shadowColor         = UIColor.systemGray5.cgColor
        self.registerBtn.layer.shadowOffset        = .zero
        self.registerBtn.layer.shadowRadius        = 10
        self.registerBtn.layer.shadowPath          = UIBezierPath(rect: self.registerBtn.bounds).cgPath
//        self.seConnecterBtn.backgroundColor           = UIColor.white
        self.registerBtn.layer.shadowOpacity       = 0.1
        self.registerBtn.layer.shouldRasterize     = true
        self.registerBtn.layer.rasterizationScale  = UIScreen.main.scale
        
        self.registerView.layer.cornerRadius        = 10
//        self.loginView.layer.shadowColor         = UIColor.systemGray5.cgColor
        self.registerView.layer.shadowOffset        = .zero
        self.registerView.layer.shadowRadius        = 10
        self.registerView.layer.shadowPath          = UIBezierPath(rect: self.registerView.bounds).cgPath
//        self.loginView.backgroundColor           = UIColor.white
        self.registerView.layer.shadowOpacity       = 0.1
        self.registerView.layer.shouldRasterize     = true
        self.registerView.layer.rasterizationScale  = UIScreen.main.scale
        
        self.fieldsView.layer.cornerRadius        = 5
//        self.loginView.layer.shadowColor         = UIColor.systemGray5.cgColor
        self.fieldsView.layer.shadowOffset        = .zero
        self.fieldsView.layer.shadowRadius        = 10
        self.fieldsView.layer.shadowPath          = UIBezierPath(rect: self.fieldsView.bounds).cgPath
//        self.loginView.backgroundColor           = UIColor.white
        self.fieldsView.layer.shadowOpacity       = 0.1
        self.fieldsView.layer.shouldRasterize     = true
        self.fieldsView.layer.rasterizationScale  = UIScreen.main.scale
        
        
        self.imageLogo.layer.cornerRadius        = 20
//        self.loginView.layer.shadowColor         = UIColor.systemGray5.cgColor
        self.imageLogo.layer.shadowOffset        = .zero
        self.imageLogo.layer.shadowRadius        = 10
        self.imageLogo.layer.shadowPath          = UIBezierPath(rect: self.imageLogo.bounds).cgPath
//        self.loginView.backgroundColor           = UIColor.white
        self.imageLogo.layer.shadowOpacity       = 0.1
        self.imageLogo.layer.shouldRasterize     = true
        self.imageLogo.layer.rasterizationScale  = UIScreen.main.scale
        
        self.connecterBtn.layer.cornerRadius        = 5
//        self.loginView.layer.shadowColor         = UIColor.systemGray5.cgColor
        self.connecterBtn.layer.shadowOffset        = .zero
        self.connecterBtn.layer.shadowRadius        = 10
        self.connecterBtn.layer.shadowPath          = UIBezierPath(rect: self.connecterBtn.bounds).cgPath
//        self.loginView.backgroundColor           = UIColor.white
        self.connecterBtn.layer.shadowOpacity       = 0.1
        self.connecterBtn.layer.shouldRasterize     = true
        self.connecterBtn.layer.rasterizationScale  = UIScreen.main.scale
    }
    
    
    
    var ref: DatabaseReference!
    
    @IBAction func registerOnClick(_ sender: Any) {
        
        if let em : String = emailText.text! , let pass : String = passwordText.text!{
            Auth.auth().createUser(withEmail: emailText.text!, password: passwordText.text!) {(user, error) in
                    if let error = error {
                        print(error.localizedDescription)
                    }
                    else {
                        print("User signed in!")

                        self.ref.child("data/users").updateChildValues(["\(Auth.auth().currentUser!.uid)":["Username":""]])
                        print("Success register !")
//                        self.performSegue(withIdentifier: "home", sender: self)
                        //At this point, the user will be taken to the next screen
                    }
                } }
            else{
                print("You left email/password empty")
            }
    }
    
    
    @IBAction func connecterOnClick(_ sender: Any) {
        let storyBoard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil)
        let ac = storyBoard.instantiateViewController(withIdentifier: "login") as! ViewController
        self.navigationController?.pushViewController(ac, animated: true)
    }
    
    
    
    
}
